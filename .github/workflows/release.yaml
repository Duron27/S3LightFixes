name: release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
  build:
    needs: setup
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04, windows-latest, android-latest]
        include:
          - os: macos-latest
            binary: s3lightfixes
            archive: macos-latest.zip
          - os: ubuntu-20.04
            binary: s3lightfixes
            archive: ubuntu-latest.zip
          - os: windows-latest
            binary: s3lightfixes.exe
            archive: windows-latest.zip
          - os: android-latest
            binary: s3lightfixes
            archive: android-latest.zip
            ndk_triplet: aarch64-linux-android
            api: 24
    runs-on: ${{ matrix.os }}
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      
      - name: Setup Android NDK
        if: matrix.os == 'android-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar unzip
          wget https://dl.google.com/android/repository/android-ndk-r26b-linux.zip
          unzip android-ndk-r26b-linux.zip
          export ANDROID_NDK_HOME=$PWD/android-ndk-r26b
          export PATH=$ANDROID_NDK_HOME:$PATH
          rustup target add ${{ matrix.ndk_triplet }}
          rustup toolchain install nightly
          rustup target add --toolchain nightly ${{ matrix.ndk_triplet }}
          echo "[target.${{ matrix.ndk_triplet }}]" >> ~/.cargo/config
          echo "linker = \"$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.ndk_triplet }}${{ matrix.api }}-clang\"" >> ~/.cargo/config

      - name: build
        run: |
          if [ "${{ matrix.os }}" = "android-latest" ]; then
            cargo build --target ${{ matrix.ndk_triplet }} --release
          else
            cargo build --release
          fi

      - uses: sigstore/cosign-installer@main
      - name: sign
        run: cosign sign-blob -y ./target/release/${{ matrix.binary }} --bundle S3LF-${{ matrix.os }}.bundle

      - name: compress
        run: 7z a -tzip ${{matrix.archive}} S3LF-${{ matrix.os }}.bundle ./target/release/${{matrix.binary}}

      - name: upload
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ matrix.archive }}

      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v4
        with:
          update_release_body: true
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            ./target/release/${{ matrix.binary }}
